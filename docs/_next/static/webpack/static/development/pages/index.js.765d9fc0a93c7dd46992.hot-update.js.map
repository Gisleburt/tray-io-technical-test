{"version":3,"file":"static/webpack/static/development/pages/index.js.765d9fc0a93c7dd46992.hot-update.js","sources":["webpack:///./components/atoms/Input.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport enum InputType {\n  Button = 'button',\n  Checkbox = 'checkbox',\n  Color = 'color',\n  Date = 'date',\n  DatetimeLocal = 'datetime-local',\n  Email = 'email',\n  File = 'file',\n  Hidden = 'hidden',\n  Image = 'image',\n  Month = 'month',\n  Number = 'number',\n  Password = 'password',\n  Radio = 'radio',\n  Range = 'range',\n  Reset = 'reset',\n  Search = 'search',\n  Submit = 'submit',\n  Tel = 'tel',\n  Text = 'text',\n  Time = 'time',\n  Url = 'url',\n  Week = 'week',\n}\n\nexport type InputValue = string | string[] | number;\n\nexport interface InputProps {\n  type: InputType;\n  name: string;\n  label?: string;\n  required?: boolean;\n  value?: InputValue;\n  pattern?: string;\n}\n\nconst StyledLabel = styled.label<InputProps>`\n  display: flex;\n  padding: 4px 0;\n  flex-direction: ${({ type }): string => (type === InputType.Checkbox ? 'row-reverse' : 'column')};\n  justify-content: ${({ type }): string => (type === InputType.Checkbox ? 'flex-end' : 'flex-start')};\n  \n  input {\n    display: block;\n    border: 2px solid black;\n    flex-grow: ${({ type }): number => (type === InputType.Checkbox ? 0 : 1)};\n  }\n  \n  span::after {\n    display: ${({ required }): string => (required ? 'inline' : 'none')};\n    content: ' *';\n    color: red;\n  }\n`;\n\nlet idCounter = 0;\n\nconst Input = (props: InputProps): JSX.Element => {\n  const {\n    type,\n    name,\n    required,\n    value,\n    label,\n  } = props;\n  const id = `input-${name}-${idCounter += 1}`;\n  return (\n    <StyledLabel htmlFor={id} {...props}>\n      <span>{label}</span>\n      <input id={id} type={type} name={name} required={required || false} defaultValue={value} />\n    </StyledLabel>\n  );\n};\n\nInput.displayName = 'Input';\n\nexport default Input;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAmCA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAKA;AAAA;AAAA;AAIA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAEA;;;;A","sourceRoot":""}